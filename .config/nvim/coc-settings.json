{
  "suggest.noselect": true,
  "suggest.completionItemKindLabels": {
        "variable": "\uf71b",
        "constant": "\uf8ff",
        "struct": "\ufb44",
        "class": "\uf0e8",
        "interface": "\ufa52",
        "text": "\ue612",
        "enum": "\uf435",
        "enumMember": "\uf02b",
        "color": "\ue22b",
        "property": "\ufab6",
        "field": "\uf93d",
        "unit": "\uf475",
        "file": "\uf471",
        "value": "\uf8a3",
        "event": "\ufacd",
        "folder": "\uf115",
        "keyword": "\uf893",
        "snippet": "\uf64d",
        "operator": "\uf915",
        "reference": "\uf87a",
        "typeParameter": "\uf278",
        "default": "\uf29c"
  },
  "clangd.path": "/home/uhlmanny/.config/coc/extensions/coc-clangd-data/install/12.0.0/clangd_12.0.0/bin/clangd",

  "zig.enabled": true,
  "zig.startUpMessage": true,
  "zig.path": "zls",
  "zig.debugLog": false,

  "languageserver": {
    "julia": {
      "command": "/home/uhlmanny/.local/bin/julia",
      "args" : ["--startup-file=no", "--history-file=no", "-e",
      "using LanguageServer;\nusing Pkg;\nimport StaticLint;\nimport SymbolServer;\nenv_path = \"./\"\nserver = LanguageServer.LanguageServerInstance(stdin, stdout, env_path, \"\");\nserver.runlinter = true;\nrun(server);" ],
      "filetypes": ["julia"]
    },
    "fortran": {
      "command": "fortls",
      "filetypes": ["fortran"],
      "rootPatterns": [".fortls", ".git/"]
    },
    "racket": {
      "command": "racket",
      "args": [ "-l", "racket-langserver" ],
      "filetypes": [ "racket", "rkt" ]
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
      "filetypes": ["haskell", "lhaskell"],
      "trace.server": "verbose"
    },
    "agda": {
        "command": "als",
        "filetypes": ["agda"]
    },
    "nim": {
      "command": "nimlsp",
      "filetypes": ["nim"]
    },
    "clojure-lsp": {
      "command": "bash",
      "args": ["-c", "clojure-lsp"],
      "filetypes": ["clojure"],
      "rootPatterns": ["project.clj"],
      "additionalSchemes": ["jar", "zipfile"],
      "trace.server": "verbose",
      "initializationOptions": {}
    },
    "R": {
      "enable": true,
      "command": "/usr/bin/R",
      "args": ["--slave", "-e", "languageserver::run()"],
      "filetypes": ["r"]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "python": "mypy"
  },
  "diagnostic-languageserver.linters": {
    "pylint": {
      "sourceName": "pylint",
      "command": "pylint",
      "debounce": 100,
      "args": [
        "--output-format",
        "text",
        "--score",
        "no",
        "--msg-template",
        "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
        "%file"
      ],
      "formatPattern": [
        "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
        {
          "line": 1,
          "column": 2,
          "endColumn": 2,
          "security": 3,
          "message": 4
        }
      ],
      "rootPatterns": ["pyproject.toml", "setup.py", ".git"],
      "securities": {
        "informational": "hint",
        "refactor": "info",
        "convention": "info",
        "warning": "warning",
        "error": "error",
        "fatal": "error"
      },
      "offsetColumn": 1,
      "offsetColumnEnd": 1,
      "formatLines": 1
    }
  },
  "Lua.telemetry.enable": false
}
